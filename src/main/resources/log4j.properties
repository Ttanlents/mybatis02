
#--------HTML-----------
#当项目启动  日志系统会自动读取类路径下 配置文件， 并且解析创建相关对象
#1.配置日志根     log4j.rootLogger=日志级别,日志输出目的地对象1，日志输出目的地对象2...
#日志级别：track -> debug -> info -> warning -> error
log4j.rootLogger=info,myfile,myconsole
#2.配置输出目的地  log4j.appender.输出目的地对象名 = 输出目的地类型
log4j.appender.myfile=org.apache.log4j.FileAppender
log4j.appender.myfile.Encoding=UTF-8
#3.配置输出目的地的属性 文件属性配置
log4j.appender.myfile.File=D\:\\error.html
#3.配置输出目的地的属性  输出格式属性配置
log4j.appender.myfile.layout=org.apache.log4j.HTMLLayout

#--------console-----------
#log4j.myconsole=debug
log4j.appender.myconsole=org.apache.log4j.ConsoleAppender
log4j.appender.myconsole.layout=org.apache.log4j.SimpleLayout
#log4j.appender.myconsole.layout.conversionPattern=%d{yyyy-MM-dd HH:mm:ss.SSSXXX} %-5p [%t] [%C %L] %m%n
#--------txt,log-----------
#log4j.rootLogger=error,myfile
#log4j.appender.myfile=org.apache.log4j.FileAppender
#log4j.appender.myfile.File=D\:\\error.log
#log4j.appender.myfile.layout=org.apache.log4j.PatternLayout
#log4j.appender.myfile.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n

#输出sql语句到日志  
#log4j.logger.org.hibernate.SQL=debug  
  
#将对应的参数占位符？换成传入的参数  
#log4j.logger.org.hibernate.type=trace

#   输出   mybatis 的sql语句与参数        指定mapper接口所在的位置的输出级别即可
#   log4j.logger.mapper接口所在的包名=TRACE
log4j.logger.com.yjf.dao=TRACE